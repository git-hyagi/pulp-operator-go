name: Pulp CI
on:
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:
  pull_request:
  schedule:
    # * is a special character in YAML so you have to quote this string
    # runs at 3:00 UTC daily
    - cron: '00 3 * * *'
env:
  COLORTERM: 'yes'
  TERM: 'xterm-256color'
jobs:
  galaxy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Setup Go environment
        uses: actions/setup-go@v3.2.0
        with:
          go-version: '1.17.11'
          cache: true
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
          echo "CI_TEST_STORAGE=filesystem" >> $GITHUB_ENV
          echo "API_ROOT=/api/galaxy/pulp/" >> $GITHUB_ENV
        shell: bash
      - name: Start minikube
        run: |
          minikube start --vm-driver=docker --extra-config=apiserver.service-node-port-range=80-32000
          minikube addons enable metrics-server
        # now you can run kubectl to see the pods in the cluster
      - name: Try the cluster !
        run: kubectl get pods -A
      - name: Setup a minikube docker env
        run: minikube -p minikube docker-env | grep "export" | sed 's/export //' | sed 's/"//g' >> $GITHUB_ENV
      - name: Uninstalling GHA kustomize
        run: |
          # hack for uninstalling kustomize from GHA
          mv /usr/local/bin/kustomize /usr/local/bin/ghakustomize
          make kustomize
          mv ./bin/kustomize /usr/local/bin/kustomize
          kustomize version
        shell: bash
      - name: Build Operator
        run: |
          make docker-build
          docker images
        shell: bash
      - name: Deploy pulp-operator to K8s
        run: |
          make deploy
          kubectl get namespace
          kubectl config set-context --current --namespace=pulp-operator-go-system
          # kubectl apply -f config/samples/galaxy.yaml
          kubectl apply -f config/samples/simple.yaml
          # kubectl apply -f .ci/assets/kubernetes/pulp-admin-password.secret.yaml
          # kubectl apply -f .ci/assets/kubernetes/galaxy_sign.secret.yaml
          # kubectl apply -f .ci/assets/kubernetes/signing_scripts.configmap.yaml
        shell: bash
      - name: Check and wait pulp-operator deploy
        run: .ci/scripts/pulp-operator-check-and-wait.sh -m
        shell: bash
      # - name: Test
      #   run: .ci/scripts/galaxy_ng-tests.sh -m
      #   shell: bash
      - name: Logs
        if: always()
        run: |
          docker images
          .github/workflows/scripts/show_logs.sh
          http --follow --timeout 30 --check-status --pretty format --print hb http://localhost:24880/pulp/api/v3/status/ || true
